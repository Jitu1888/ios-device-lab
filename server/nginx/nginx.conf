worker_processes auto;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/conf.d/resolver.conf;
  keepalive_timeout   65;
  types_hash_max_size 2048;

  default_type        application/octet-stream;

  upstream stf_app {
    server app:3000 max_fails=0;
  }

  upstream stf_auth {
    server auth:3000 max_fails=0;
  }

  upstream stf_storage_apk {
    server storage-plugin-apk:3000 max_fails=0;
  }

  upstream stf_storage_image {
    server storage-plugin-image:3000 max_fails=0;
  }

  upstream stf_storage {
    server storage-temp:3000 max_fails=0;
  }

  upstream stf_websocket {
    server websocket:3000 max_fails=0;
  }

  upstream stf_api {
    server api:3000 max_fails=0;
  }

  types {
    application/javascript  js;
    image/gif               gif;
    image/jpeg              jpg;
    text/css                css;
    text/html               html;
  }

  map $http_upgrade $connection_upgrade {
    default  upgrade;
    ''       close;
  }

  server {
    listen 80;
    server_name _;
    return 301 https://$host$request_uri;
  }
  
 
  server {
    listen 443 ssl;
    server_name _;
    
    ssl_certificate /etc/nginx/ssl/cert.crt;
    ssl_certificate_key /etc/nginx/ssl/cert.key;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    server_tokens off;
    root          /dev/null;

    # Client IP should be changed from [^/] to some more specific range such as:
    # (?<client_ip>192.168.255.[0-9]+) to restrict it to a reasonable IP range
    # If left alone this example config will let clients arbitrarily tunnel to any IP on ports 8000-8009
    location ~ "^/frames/(?<client_ip>[^/]+)/(?<client_port>800[0-9])/x$" {
      proxy_pass http://$client_ip:$client_port/echo/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Real-IP $remote_addr; 
    }

    location /auth/ {
      proxy_pass http://stf_auth/auth/;
    }

    location /api/ {
      proxy_pass http://stf_api/api/;
    }

    location /s/image/ {
      proxy_pass http://stf_storage_image;
    }

    location /s/apk/ {
      proxy_pass http://stf_storage_apk;
    }

    location /s/ {
      client_max_body_size 1024m;
      client_body_buffer_size 128k;
      proxy_pass http://stf_storage;
    }

    location /socket.io/ {
      proxy_pass http://stf_websocket;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Real-IP $http_x_real_ip;
    }

    # This .well-known path is mapped to make it easier to use letsencrypt for certs
    location /.well-known/ {
    }

    location / {
      proxy_pass http://stf_app;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Real-IP $http_x_real_ip;
    }
  }
}
